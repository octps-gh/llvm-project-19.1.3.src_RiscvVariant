#ifndef LLVM_LIB_TARGET_RYMO_MCTARGETDESC_RYMOINSTPRINTER_H
#define LLVM_LIB_TARGET_RYMO_MCTARGETDESC_RYMOINSTPRINTER_H

#include "MCTargetDesc/RymoMCTargetDesc.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class RymoInstPrinter : public MCInstPrinter {
public:
  RymoInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                    const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                               unsigned OpIdx, unsigned PrintMethodIdx,
                               raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);
  static const char *getRegisterName(MCRegister Reg, unsigned AltIdx);
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
};
} // namespace llvm

#endif