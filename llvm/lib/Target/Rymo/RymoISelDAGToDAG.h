#ifndef LLVM_LIB_TARGET_RYMO_RYMOISELDAGTODAG_H
#define LLVM_LIB_TARGET_RYMO_RYMOISELDAGTODAG_H

#include "MCTargetDesc/RymoMCTargetDesc.h"
#include "Rymo.h"
#include "RymoTargetMachine.h"
#include "llvm/CodeGen/SelectionDAGISel.h"

namespace llvm {

class RymoDAGToDAGISel : public SelectionDAGISel {
  const RymoSubtarget *Subtarget = nullptr;

public:
  RymoDAGToDAGISel() = delete;

  explicit RymoDAGToDAGISel(RymoTargetMachine &TargetMachine, CodeGenOptLevel OptLevel)
      : SelectionDAGISel(TargetMachine, OptLevel) {}

  bool runOnMachineFunction(MachineFunction &MF) override {
    Subtarget = &MF.getSubtarget<RymoSubtarget>();
    return SelectionDAGISel::runOnMachineFunction(MF);
  }

  void Select(SDNode *Node) override;

// Include the pieces autogenerated from the target description.
#include "RymoGenDAGISel.inc"
};

class RymoDAGToDAGISelLegacy : public SelectionDAGISelLegacy {
public:
  static char ID;
  explicit RymoDAGToDAGISelLegacy(RymoTargetMachine &TM,
                                  CodeGenOptLevel OptLevel)
      : SelectionDAGISelLegacy(
            ID, std::make_unique<RymoDAGToDAGISel>(TM, OptLevel)) {}
};
} // namespace llvm

#endif